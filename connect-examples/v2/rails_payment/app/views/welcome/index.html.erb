<div id="form-container">
  <div id="sq-walletbox">
    <div id="sq-apple-pay-label" class="wallet-not-enabled">Apple Pay for Web not enabled.</div>
    <!-- Placeholder for Apple Pay for Web button -->
    <button id="sq-apple-pay"></button>

    <div id="sq-masterpass-label" class="wallet-not-enabled">Masterpass not enabled.</div>
    <!-- Placeholder for Masterpass button -->
    <button id="sq-masterpass"></button>

    <div id="sq-walletbox-divider">
      <span id="sq-walletbox-divider-label">Or</span>
      <hr />
    </div>
  </div>

  <div id="sq-ccbox">
    <div id="successNotification" style="display: none">
      Card Charged Successfully!!
    </div>
    <form id="nonce-form" onsubmit="return paymentFormSubmit()">
      <fieldset>

        <span class="label">Card Number</span>
        <div id="sq-card-number"></div>

        <div class="third">
          <span class="label">Expiration</span>
          <div id="sq-expiration-date"></div>
        </div>

        <div class="third">
          <span class="label">CVV</span>
          <div id="sq-cvv"></div>
        </div>

        <div class="third">
          <span class="label">Postal</span>
          <div id="sq-postal-code"></div>
        </div>
      </fieldset>
      <input type="submit" id="sq-creditcard" class="button-credit-card" value="Pay $1.00 Now">
      <div id="error"></div>
    </form>
  </div>
</div>
<script type="text/javascript">
var paymentForm = new SqPaymentForm({
  applicationId: '<%=Rails.application.secrets.square_application_id %>',
  locationId: '<%=Rails.application.secrets.square_location_id %>',
  inputClass: 'sq-input',
  inputStyles: [{
      fontSize: '16px',
      fontFamily: 'Helvetica Neue',
      padding: '16px',
      color: '#373F4A',
      backgroundColor: 'transparent',
      lineHeight: '24px',
      placeholderColor: '#CCC',
      _webkitFontSmoothing: 'antialiased',
      _mozOsxFontSmoothing: 'grayscale'
    }],
  cardNumber: {
    elementId: 'sq-card-number',
    placeholder: '0000 0000 0000 0000'
  },
  cvv: {
    elementId: 'sq-cvv',
    placeholder: 'CVV'
  },
  expirationDate: {
    elementId: 'sq-expiration-date',
    placeholder: 'MM/YY'
  },
  postalCode: {
    elementId: 'sq-postal-code',
    placeholder: '94110'
  },
  // Initialize Apple Pay placeholder ID
  applePay: {
    elementId: 'sq-appley-pay'
  },
  // Initialize Masterpass placeholder ID
  masterpass: {
    elementId: 'sq-masterpass'
  },
  callbacks: {
    /*
    * callback function: cardNonceResponseReceived
    * Triggered when: SqPaymentForm completes a card nonce request
    */
    cardNonceResponseReceived: function(errors, nonce, cardData) {
      if (errors){
        var error_html = ""
        for (var i =0; i < errors.length; i++){
          error_html += "<li> " + errors[i].message + " </li>";
        }
        document.getElementById("error").innerHTML = error_html;
        document.getElementById('sq-creditcard').disabled = false;
      }else{
        document.getElementById("error").innerHTML = "";
        chargeCardWithNonce(nonce);
      }
    },
    /*
    * callback function: unsupportedBrowserDetected
    * Triggered when: the page loads and an unsupported browser is detected
    */
    unsupportedBrowserDetected: function() {
      // Alert the buyer
    },
    /*
    * callback function: methodsSupported
    * Triggered when: the page is loaded.
    */
    methodsSupported: function (methods) {
      var walletBox = document.getElementById('sq-walletbox');
      var applePayBtn = document.getElementById('sq-apple-pay');
      var applePayLabel = document.getElementById('sq-apple-pay-label');
      var masterpassBtn = document.getElementById('sq-masterpass');
      var masterpassLabel = document.getElementById('sq-masterpass-label');

      if (methods.applePay === true) {
        walletBox.style.display = 'block';
        applePayBtn.style.display = 'block';
        applePayLabel.style.display = 'none';
      }
      // Only show the button if Masterpass is enabled
      // Otherwise, display the wallet not enabled message.
      if (methods.masterpass === true) {
        walletBox.style.display = 'block';
        masterpassBtn.style.display = 'block';
        masterpassLabel.style.display = 'none';
      }
    },
    /*
     * callback function: createPaymentRequest
     * Triggered when: a digital wallet payment button is clicked.
     */
    createPaymentRequest: function () {
      return {
        requestShippingAddress: true,
        currencyCode: "USD",
        countryCode: "US",
        total: {
          label: "Test",
          amount: 100,
          pending: false,
        }
      };
    },
    unsupportedBrowserDetected: function() {
      // Fill in this callback to alert buyers when their browser is not supported.
    },
    /*
    * callback function: inputEventReceived
    * Triggered when: visitors interact with SqPaymentForm iframe elements.
    */
    inputEventReceived: function(inputEvent) {
      switch (inputEvent.eventType) {
        case 'focusClassAdded':
          // Handle as desired
          break;
        case 'focusClassRemoved':
          // Handle as desired
          break;
        case 'errorClassAdded':
          // Handle as desired
          break;
        case 'errorClassRemoved':
          // Handle as desired
          break;
        case 'cardBrandChanged':
          // Handle as desired
          break;
        case 'postalCodeChanged':
          // Handle as desired
          break;
      }
    }
  }
});

var paymentFormSubmit = function(){
  document.getElementById('sq-creditcard').disabled = true;
  paymentForm.requestCardNonce();
  return false;
};

var chargeCardWithNonce = function(nonce) {
  var http = new XMLHttpRequest();
  var url = "/charges/charge_card";
  var params = "nonce=" + nonce;

  http.open("POST", url, true);

  //Send the proper header information along with the request
  http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  http.setRequestHeader("X-CSRF-Token", "<%= form_authenticity_token %>");

  http.onreadystatechange = function() {//Call a function when the state changes.
      if(http.readyState === 4 && http.status === 200) {
        let data = JSON.parse(http.responseText);
        if (data.status === 200) {
          document.getElementById("successNotification").style.display = "block";
          document.getElementById("nonce-form").style.display = "none";
          window.scrollTo(0, 0);
        }else if (data.status === 400){
          let error_html = "";
          for (let i =0; i < data.errors.length; i++){
            error_html += "<li> " + data.errors[i].detail + " </li>";
          }
          document.getElementById("error").innerHTML = error_html;
          document.getElementById('sq-creditcard').disabled = false;
        }
      }
  };
  http.send(params);
};

// required to work with rails turbolinks
document.addEventListener('page:change', function(){
  console.log('dom loaded');
  paymentForm.build();
});

</script>
